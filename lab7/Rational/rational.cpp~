#include <cmath>
#include <iostream>
#include "rational.h" //(implementation)

using namespace std;

Rational::Rational()
{ numer=1; denom=1;}

Rational::Rational(int n, int d)
{this->numer=n; denom=d;}

Rational::~Rational(){ } //nothing to be done (yet)

int Rational::getNumer()
	{return numer;}

int Rational::getDenom()
{return denom;}

void Rational::setNumer(int n)
{numer=n;}

void Rational::setDenom(int d)
{denom=d;}

void Rational::print()
{numer=getNumer();
denom=getDenom();
cout<<numer<<"/"<<denom<<endl;}

Rational Rational::add(Rational b){
Rational c;
c.setNumer(numer*b.getDenom()+denom*b.getNumer());
c.setDenom(denom*b.getDenom());
return c;}

Rational Rational::subtract(Rational b){
Rational c;
c.setNumer(numer*b.getDenom()-denom*b.getNumer());
c.setDenom(denom*b.getDenom());
return c;}

Rational Rational::multiply(Rational b){
Rational c;
c.setNumer(numer*b.getNumer());
c.setDenom(denom*b.getDenom());
return c;}

Rational Rational::divide(Rational b){
Rational c;
c.setNumer(numer*b.getDenom());
c.setDenom(denom*b.getNumer());
return c;}

